# Définition du serveur backend API
upstream api {
  server api:8000; # Serveur API accessible à l'adresse 'api' sur le port 8000
}

# Mappage du header 'Upgrade' pour la gestion des websockets
map $http_upgrade $connection_upgrade {
  default upgrade; # Par défaut, on passe le header 'Upgrade' tel quel
  '' close; # Si le header 'Upgrade' est vide, on ferme la connexion
}

# Définition du serveur frontend
upstream client {
  server estate_frontend:3000; # Serveur frontend accessible à l'adresse 'client' sur le port 3000
}

# Configuration du serveur Nginx
server {
  listen 80; # Écoute les requêtes HTTP sur le port 80

  # Configuration des requêtes
  client_max_body_size 20M; # Taille maximale des requêtes HTTP autorisées
  error_log /var/log/nginx/error.log error; # Log des erreurs Nginx

  # Configuration des headers
  proxy_set_header Host $host; # Transfère le header 'Host'
  proxy_set_header X-Real-IP $remote_addr; # Transfère l'adresse IP du client
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Transfère l'adresse IP des proxys intermédiaires
  proxy_set_header X-Forwarded-Proto $scheme; # Transfère le protocole (http ou https)
  proxy_http_version 1.1; # Définit la version du protocole HTTP
  proxy_set_header Upgrade $http_upgrade; # Transfère le header 'Upgrade' pour les websockets
  proxy_set_header Connection $connection_upgrade; # Transfère le header 'Connection'

  # Routes pour les différentes applications
  location /api/v1/ { # Proxy des requêtes vers /api/v1/ de l'API
    proxy_pass http://api;
    access_log /var/log/nginx/api_access.log; # Log des requêtes vers l'API
    error_log /var/log/nginx/api_error.log error; # Log des erreurs de l'API
  }

  location /hidden { # Proxy des requêtes vers l'administration de l'API
    proxy_pass http://api;
    access_log /var/log/nginx/admin_access.log; # Log des requêtes vers l'API (administrateur)
  }

  location /redoc { # Proxy des requêtes vers /redoc pour la documentation de  l'API
    proxy_pass http://api;
  }

#   location /api/v1/auth/google { # Proxy des requêtes vers /api/v1/auth/google vers le frontend
#     proxy_pass http://client/google;
#   }

  location / { # Proxy des requêtes restantes vers le frontend
    proxy_pass http://client;
  }

  # Serveur statique des fichiers statiques
  location /static/ {
    alias /app/staticfiles/; # Répertoire contenant les fichiers statiques
    expires 30d; # Durée de vie des fichiers en cache
    add_header Cache-Control "public, max-age=2592000"; # Options du cache
  }
}